datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

model User {
    id                        Int            @id @default(autoincrement())
    email                     String         @unique
    name                      String
    password                  String
    surname                   String?
    currentHashedRefreshToken String?
    avatar                    String?
    MediaPost                 MediaPost[]
    blockedPosts              MediaPost[]    @relation("blocked-user-post")
    blocker                   BlockedUsers[] @relation("blocker")
    blocked                   BlockedUsers[] @relation("blocked")
    roles                     Roles[]
}

model MediaPost {
    id           Int       @id @default(autoincrement())
    title        String
    contentUrl   String
    description  String
    creator      User      @relation(fields: [creatorId], references: [id])
    creatorId    Int
    isBlocked    Boolean   @default(false)
    blockedUsers User[]    @relation("blocked-user-post")
    deletedAt    DateTime? @db.Timestamptz

    @@map("mediaPost")
}

model BlockedUsers {
    id          Int  @id @default(autoincrement())
    blockedUser User @relation("blocked", fields: [blockedId], references: [id])
    blockedId   Int
    blockerUser User @relation("blocker", fields: [blockerId], references: [id])
    blockerId   Int
}

model Roles {
    id       Int    @id @default(autoincrement())
    roleName String @unique
    users    User[]
}
